---
author: [Pallas-Athena Cain, Hemani Alaparthi, Gregory M. Kapfhammer]
title: Introduction to Software Testing
date: '2023-9-16'
date-format: long
categories: [post, software engineering, fuzzing book]
description: <em>What is fuzzing and software testing?</em>
toc: true
page-layout: full
---

## Overview

### What is software testing?
Software testing is the process of evaluating and verifying that a software application or system meets specified requirements. It involves executing code in a controlled environment to check for errors, gaps, or missing requirements. So, why is it important?

* Helps identify bugs, errors, or issues in the software before it is released to users. 
* Ensures that the program behaves as expected.
* Provides feedback that helps developers improve the software iteratively, making it better with every update.

### Simple Testing in Python

To perform effective testing in Python, you need to understand three fundamental things:

* Python uses indentation for defining code blocks.
* Python is dynamically typed, meaning variables do not have fixed types.
* Python borrows syntax from other common languages, making it easier to grasp for those familiar with programming.

### Automating Tests

Automated tests can check if results are as expected using assertions. For example, assert statements take a condition and raise an exception if the condition is false This helps automate the validation process and identify issues early on. A few examples for effective automating tests include:

* Use assertions to automatically check if results are as expected.
* Handle floating-point precision issues with a small epsilon value.
* Write reusable test functions to simplify and streamline testing.

## Summary


## Reflection


## Action Items


<!-- Include the license statement for the online book -->
{{< include /_fuzzingbook-reference.qmd >}}

<!-- Include reference back to the listing of blog posts -->
{{< include /_back-blog.qmd >}}
